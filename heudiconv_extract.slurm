#!/bin/bash
#SBATCH --job-name=heudiconv_extract
#SBATCH --output=/Users/tientong/projects/llm-heuristics/heudiconv_extract_%A_%a.out
#SBATCH --error=/Users/tientong/projects/llm-heuristics/heudiconv_extract_%A_%a.err
#SBATCH --array=1-1
#SBATCH --cpus-per-task=18
#SBATCH --mem-per-cpu=2G
#SBATCH --time=02:00:00

# HeuDiConv DICOM extraction job array
# Generated by llm-heuristics

# Set up environment
module load python/3.9  # Adjust as needed for your cluster
source activate heudiconv  # Adjust as needed

# Get subject and session for this array job
MAPPING_FILE="/Users/tientong/projects/llm-heuristics/subject_sessions.txt"
LINE=$(sed -n "${SLURM_ARRAY_TASK_ID}p" $MAPPING_FILE)
TASK_ID=$(echo $LINE | cut -f1)
SUBJECT=$(echo $LINE | cut -f2)
SESSION=$(echo $LINE | cut -f3)

echo "Task ${SLURM_ARRAY_TASK_ID}: Processing subject=$SUBJECT, session=$SESSION"

# Prepare HeuDiConv command
DICOM_DIR="/private/var/folders/wt/24zz644935nd5vsgbdhtnv140000gp/T/pytest-of-tientong/pytest-7/test_extract_dicom_info_slurm_0/empty"
OUTPUT_DIR="/Users/tientong/projects/llm-heuristics/heudiconv_output"
HEUDICONV_BIN="heudiconv"

# Build command
CMD="$HEUDICONV_BIN --files $DICOM_DIR/**/*.dcm -o $OUTPUT_DIR -f convertall \
    -s $SUBJECT -c none --overwrite"

# Add session if not NONE
if [ "$SESSION" != "NONE" ]; then
    CMD="$CMD -ss $SESSION"
fi

# Add parallel jobs
if [ 18 -gt 1 ]; then
    CMD="$CMD --jobs 18"
fi

echo "Running: $CMD"

# Execute HeuDiConv
$CMD

# Check exit status
if [ $? -eq 0 ]; then
    echo "Task ${SLURM_ARRAY_TASK_ID} completed successfully"
else
    echo "Task ${SLURM_ARRAY_TASK_ID} failed with exit code $?"
    exit 1
fi
