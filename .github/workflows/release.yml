name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  test:
    name: Run Tests Before Release
    uses: ./.github/workflows/ci.yml

  build-and-publish:
    name: Build and Publish
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build distribution
      run: |
        python -m build

    - name: Check distribution
      run: |
        twine check dist/*

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

  apptainer-build-and-push:
    name: Build and Push Apptainer Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Apptainer
      run: |
        sudo apt-get update
        sudo apt-get install -y apptainer

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Apptainer image
      run: |
        apptainer build llm-heuristics.sif Dockerfile

    - name: Push to GitHub Container Registry
      run: |
        # Tag and push the image
        apptainer push llm-heuristics.sif oras://ghcr.io/${{ github.repository }}:${{ github.ref_name }}

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-and-publish, apptainer-build-and-push]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^)
        
        # Generate changelog
        echo "## Changes" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> CHANGELOG.md
        
        # Set output
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          # LLM-Heuristics ${{ github.ref_name }}
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          
          ### PyPI
          ```bash
          pip install llm-heuristics==${{ github.ref_name }}
          ```
          
          ### Apptainer
          ```bash
          apptainer pull docker://ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          ```
          
          ## Documentation
          
          Full documentation is available at: [https://llm-heuristics.readthedocs.io](https://llm-heuristics.readthedocs.io)
        draft: false
        prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'alpha') || contains(github.ref_name, 'beta') }}